<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>The Mockup Blog</title>
    <link>https://themockup.blog</link>
    <atom:link href="https://themockup.blog/index.xml" rel="self" type="application/rss+xml"/>
    <description>Exploring the wonderful world of R
</description>
    <generator>Distill</generator>
    <lastBuildDate>Sat, 01 Aug 2020 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Building a blog with distill</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-08-01-building-a-blog-with-distill</link>
      <description>


&lt;div class="container-fluid main-container"&gt;




&lt;div class="fluid-row" id="header"&gt;




&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;
## Step 6: New post

To create a new post, you can run the following command:  
`distill::create_post(&amp;quot;title of post&amp;quot;)`

Full arguments seen below! I&amp;#39;ll call out two specific things.  

1. `draft` argument: this prevents the post from being included in the site build until you turn it to `FALSE`. This is useful if you&amp;#39;re working on a blogpost over time, or want to come back to finish it later.  
2. `date_prefix`: this adds a date like `2020-08-01-blog-post` to the front of whatever your `blog-post` name is. This is useful as it also creates a folder structure that sorts properly, and prevents name clashes.

Whenever you run the `create_post()` command it will generate a new folder and the basic RMarkdown doc to get started with the arguments you passed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create_post( title, # mandatory author = “auto”, slug = “auto”, # generates a website slug (URL) date_prefix = TRUE, # adds date for sorting draft = FALSE, edit = interactive() )&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Note that a nice overview of the Blog Post Workflow is covered at the [`distill` site](https://rstudio.github.io/distill/blog_workflow.html). This includes collaborating via Git Branches (or using them as previews). I push to my main branch all the time since I&amp;#39;m working solo.

## Step 7: Add to Git

We’re following instructions at: [Chapter 17 Existing project, GitHub last | Happy Git and GitHub for the useR](https://happygitwithr.com/existing-github-last.html). If you&amp;#39;re a Git expert, feel free to use whatever method you like. From my experience setting up a few blogs this is the least painful if you&amp;#39;re NOT a Git expert.

&amp;lt;aside&amp;gt; You could also do the create GitHub and then connect it to RStudio route [Chapter 17 Existing project, GitHub last | Happy Git and GitHub for the useR](https://happygitwithr.com/existing-github-last.html#make-and-connect-a-github-repo-option-2). &amp;lt;/aside&amp;gt;

NOTE: if you don’t have a GitHub PAT, get one now by following these instructions [B GitHub Personal Access Tokens | Happy Git and GitHub for the useR](https://happygitwithr.com/github-pat.html).

This will first use Git locally, and then create a new GitHub repo based off your existing local files.  

Run the `usethis::use_git()` command, which will kick off some questions:  

* Don’t commit just yet (Select `3: Not Now`)  
* Restart RStudio (Select `2: Yes`)  

You will know it all worked when you have the git logo at the top of RStudio  

![Git logo](git.png)

* Click on the Git logo and commit everything, notice we can’t push since 
we haven’t configured GitHub yet  

![Initial commit](inital-commit.png)

* `usethis::use_github()` — this works if you have already configured a GitHub Personal Access Token  
  * Next select https if you don’t have SSH keys  
  * Say `1: yup` to the title and description  
  
Example of what your console commands are and their output seen below!
  


Once this is all run, it should open up a new webpage with your fancy new GitHub repo! Mine opened at: [GitHub - jthomasmock/demo-distill-blog](https://github.com/jthomasmock/demo-distill-blog).


## Step 8: Netlify

Now that we have our files on Github, we’re ready to deploy via Netlify!

You&amp;#39;ll need to Create an account at netlify if you don’t have one already. 

### Once you&amp;#39;re logged in:  


* First click on import from Git  

![New site from Git](netlify-new-site.png)

* Click on `Configure netlify on GitHub`, and follow their instructions to allow access, and then add the selected repository you want to send over (demo-distill-blog for me)  
  * Click Save!  
  
![Add specific repo](add-demo-repo.png)

* Click on `demo-distill-blog` or whatever your blog&amp;#39;s name is!  

**IMPORTANT**

* Make sure to set the `Publish Directory` to `_site` (so Netlify can find the knitted HTML content)  
* And then click deploy!  

![Make sure to set publish directory to _site](publish-directory.png)

* You’ll get a fun temporary name (mine was [https://confident-meitner-e6e7dc.netlify.app/](https://confident-meitner-e6e7dc.netlify.app/)). You can change this with the `Domain Settings` to `some-name.netlify.app` or even purchase a custom domain like I did for example `themockup.blog` or what Sharla Gelfand did with `sharla.party`.

Now your website should be up and running! If you don&amp;#39;t see a site (it 404s), then I would check to make sure you set the `Publish Director` to `_site`, otherwise it won&amp;#39;t know where to find the actual HTML content.

## Step 9: Blog post workflows

&amp;gt; Workflow difference: Furthermore, website pages and root pages of blogs are re-rendered when the site is rebuilt but blog articles are not. Each blog article has to be rendered on its own, with intent. Why? Given that R package upgrades have a tendency to break older code, continuously re-rendering old posts is nearly impossible to do without errors, especially over longer periods of time.


This means you can &amp;quot;Build Site&amp;quot; frequently locally to check out how things work. This is personally the workflow I prefer vs having to commit the output to GitHub or a GitHub branch just to see the preview. You can also knit individual blog posts and they will adapt to your theme, so you can again test local changes whenever you&amp;#39;d like!

To get things into &amp;quot;production&amp;quot; once you have set up Netlify, you&amp;#39;ll just need to knit the new blog post, then commit and push to GitHub.

You can use command line git or the git integration in RStudio.

![Example of git in RStudio](git.png)

Basic idea is click commit and then push.

![Example of a commit](inital-commit.png)

# Next Steps

If this guide didn&amp;#39;t provide enough detail, make sure to check out the [Blog Post Workflow](https://rstudio.github.io/distill/blog_workflow.html) that goes into specific examples, like importing posts from elsewhere, changing URLs, updating old posts, etc.

Now that you have a website running you can either leave it exactly as it is formatted, and just add new posts or you can do a little bit of customization to the &amp;quot;About Me&amp;quot;, Home page, etc.

A lot of options are already covered at [Distill for R Markdown: Creating a Blog](https://rstudio.github.io/distill/blog.html#next-steps)

A few notes: 

* If you want Twitter cards to show up with your images, you need to add a `preview: some_img_name.png` argument to the YAML header for each post.  
* If you define a custom domain you’ll need to change the [`base_url` at the `_site.yml` file](https://rstudio.github.io/distill/blog.html#Configuration)  


## Customize Appearance 

Probably of most interest to folks is customizing the appearance of the blog.

* In general the strategy you should use is to inspect parts of the website for the class names and then you can apply CSS to change it  
* A nice overview of the &amp;quot;Inspect&amp;quot; tool is covered [here](https://developers.google.com/web/tools/chrome-devtools/open)  
* HTML/CSS classes and selectors are covered in the Mozilla docs [here](https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors)  
* To use a custom CSS file, you’ll need to change the output in `_site.yml` to include the below:



I keep my `styles.css` file at the same level as my `_site.yml` file.

### Example changes

You&amp;#39;ll need to store all of these in your `styles.css` file, and note that some of them depend on other changes - specifically to use custom fonts you ALSO have to import the custom fonts!

#### Bold silver title, pink background



#### Want entire webpage to be &amp;quot;pink&amp;quot;?
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;body { background-color: #FF1493; }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Change hover color in nav bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.distill-site-nav a:hover { color: #383838; }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Change header font or color&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;/* Change appearance of headers */ h1, h2, h3, h4, h5 { font-family: ‘Fira Mono’, sans-serif; color: color: #383838; }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Import custom fonts from Google
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;/* Import fonts from Google’s API */ &lt;span class="citation"&gt;@import&lt;/span&gt; url(‘&lt;a href="https://fonts.googleapis.com/css2?family=Lato" class="uri"&gt;https://fonts.googleapis.com/css2?family=Lato&lt;/a&gt;’); &lt;span class="citation"&gt;@import&lt;/span&gt; url(‘&lt;a href="https://fonts.googleapis.com/css2?family=Fira+Mono" class="uri"&gt;https://fonts.googleapis.com/css2?family=Fira+Mono&lt;/a&gt;’);&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Use those fonts throughout&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;/* Use specific font in the body of the text */ html, body, p {&lt;/p&gt;
&lt;p&gt;font-family: ‘Lato’, sans-serif; font-weight: 200; line-height: 1.3; font-size: 1.0em; color: #333333; font-style: normal;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Change in-line code&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;/* Change the appearance of in-line code chunks */ code { font-family: ‘Fira Mono’, sans-serif; color: #383838; background: #F5F5F5; font-weight: 400; font-size: 0.9em; }&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#### Change code chunk colors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;d-code { background: grey; } ```&lt;/p&gt;




&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


&lt;/script&gt;

&lt;!-- tabsets --&gt;

&lt;script&gt;
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown &gt; .nav-tabs &gt; li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open')
  });
});
&lt;/script&gt;

&lt;!-- code folding --&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
&lt;/script&gt;

</description>
      <distill:md5>b00f40f4a8cfa2a615d492eaa38f62d8</distill:md5>
      <category>rmarkdown</category>
      <category>tidyverse</category>
      <guid>https://themockup.blog/posts/2020-08-01-building-a-blog-with-distill</guid>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How I share knowledge around R Markdown</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-07-25-meta-rmarkdown</link>
      <description>A meta collection of some R Markdown strategies.</description>
      <category>rmarkdown</category>
      <category>tidyverse</category>
      <guid>https://themockup.blog/posts/2020-07-25-meta-rmarkdown</guid>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-07-25-meta-rmarkdown/tools-flat.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Client-side interactivity - do more with Crosstalk</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-29-client-side-interactivity-do-more-with-crosstalk</link>
      <description>Because sharing data is caring</description>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>crosstalk</category>
      <category>plotly</category>
      <category>tables</category>
      <category>reactable</category>
      <guid>https://themockup.blog/posts/2020-05-29-client-side-interactivity-do-more-with-crosstalk</guid>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-29-client-side-interactivity-do-more-with-crosstalk/distill-preview.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Easily parsing JSON in R with jsonlite and purrr</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-22-parsing-json-in-r-with-jsonlite</link>
      <description>It's turtles all the way down...</description>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>JSON</category>
      <category>web scraping</category>
      <category>API</category>
      <category>purrr</category>
      <guid>https://themockup.blog/posts/2020-05-22-parsing-json-in-r-with-jsonlite</guid>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-22-parsing-json-in-r-with-jsonlite/distill-preview.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>gt - a (G)rammar of (T)ables</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-16-gt-a-grammer-of-tables</link>
      <description>Not to be confused with a Game of Thrones</description>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>tables</category>
      <guid>https://themockup.blog/posts/2020-05-16-gt-a-grammer-of-tables</guid>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-16-gt-a-grammer-of-tables/distill-preview.png" medium="image" type="image/png" width="1096" height="805"/>
    </item>
    <item>
      <title>reactable - An Interactive Tables Guide</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-13-reactable-tables-the-rest-of-the-owl</link>
      <description>Part 2: How to draw the rest of the owl.</description>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>tables</category>
      <guid>https://themockup.blog/posts/2020-05-13-reactable-tables-the-rest-of-the-owl</guid>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-13-reactable-tables-the-rest-of-the-owl/distill-preview.png" medium="image" type="image/png" width="1093" height="652"/>
    </item>
    <item>
      <title>QB Salaries vs Playoff Appearances</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-13-qb-salaries-vs-playoff-appearances</link>
      <description>Interactive tables make bad takes more fun.</description>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>tables</category>
      <guid>https://themockup.blog/posts/2020-05-13-qb-salaries-vs-playoff-appearances</guid>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-13-qb-salaries-vs-playoff-appearances/distill-preview.png" medium="image" type="image/png" width="1093" height="652"/>
    </item>
    <item>
      <title>Flipping tibbles for many models</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-05-01-tidy-long-models</link>
      <description>Pivoting data from wide to long to run many models at once</description>
      <category>espnscrapeR</category>
      <category>NFL</category>
      <category>tidyverse</category>
      <category>tidymodels</category>
      <guid>https://themockup.blog/posts/2020-05-01-tidy-long-models</guid>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-05-01-tidy-long-models/distill-preview.png" medium="image" type="image/png" width="2400" height="2400"/>
    </item>
    <item>
      <title>Bigger, nflfastR, dbplyr</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2019-04-28-nflfastr-dbplyr-rsqlite</link>
      <description>Doing more with dplyr and SQL</description>
      <category>NFL</category>
      <category>nflscrapR</category>
      <category>nflfastR</category>
      <category>SQL</category>
      <category>tidyverse</category>
      <guid>https://themockup.blog/posts/2019-04-28-nflfastr-dbplyr-rsqlite</guid>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <media:content url="https://images.unsplash.com/photo-1566577739112-5180d4bf9390?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1526&amp;q=80" medium="image" type="text/plain"/>
    </item>
    <item>
      <title>Beer and pdftools - a vignette</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-04-03-beer-and-pdftools-a-vignette</link>
      <description>A guide to extracting tables from many PDFs using the pdftools package</description>
      <guid>https://themockup.blog/posts/2020-04-03-beer-and-pdftools-a-vignette</guid>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Crossing 10,000 - Tidy simulation</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2020-04-03-crossing-10000-tidy-simulation</link>
      <description>Tidy simulation with dice rolls</description>
      <category>tidyverse</category>
      <category>purrr</category>
      <category>simulation</category>
      <category>probability</category>
      <guid>https://themockup.blog/posts/2020-04-03-crossing-10000-tidy-simulation</guid>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      <media:content url="https://themockup.blog/posts/2020-04-03-crossing-10000-tidy-simulation/distill-preview.png" medium="image" type="image/png" width="5400" height="3600"/>
    </item>
    <item>
      <title>Add a logo to your plot</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2019-01-09-add-a-logo-to-your-plot</link>
      <description>Put a bird on it - Portlandia.</description>
      <category>magick</category>
      <category>data visualization</category>
      <category>ggplot2</category>
      <guid>https://themockup.blog/posts/2019-01-09-add-a-logo-to-your-plot</guid>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      <media:content url="https://images.pexels.com/photos/1564506/pexels-photo-1564506.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;h=650&amp;w=940" medium="image" type="text/plain"/>
    </item>
    <item>
      <title>TidyTuesday enhancements</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2019-01-02-tidytuesday-enhancements</link>
      <description>Making #TidyTuesday better.</description>
      <category>TidyTuesday</category>
      <category>tidyverse</category>
      <category>Automation</category>
      <guid>https://themockup.blog/posts/2019-01-02-tidytuesday-enhancements</guid>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      <media:content url="https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/static/tt_logo.png" medium="image" type="image/png"/>
    </item>
    <item>
      <title>TidyTuesday</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2018-12-11-tidytuesday-a-weekly-social-data-project-in-r</link>
      <description>A weekly social data project in R</description>
      <category>TidyTuesday</category>
      <category>tidyverse</category>
      <category>Community</category>
      <guid>https://themockup.blog/posts/2018-12-11-tidytuesday-a-weekly-social-data-project-in-r</guid>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      <media:content url="https://i.imgur.com/AXfD3Fk.png" medium="image" type="image/png"/>
    </item>
    <item>
      <title>Functional Progamming in R with purrr</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2018-12-11-functional-progamming-in-r-with-purrr</link>
      <description>Minimizing repetition with further replication</description>
      <category>purrr</category>
      <category>tidyverse</category>
      <category>statistics</category>
      <guid>https://themockup.blog/posts/2018-12-11-functional-progamming-in-r-with-purrr</guid>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
      <media:content url="https://i.imgur.com/LIvMxbN.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>A Gentle Guide to Tidy Statistics in R</title>
      <dc:creator>Thomas Mock</dc:creator>
      <link>https://themockup.blog/posts/2018-12-10-a-gentle-guide-to-tidy-statistics-in-r</link>
      <description>Working your way through a basic analysis</description>
      <guid>https://themockup.blog/posts/2018-12-10-a-gentle-guide-to-tidy-statistics-in-r</guid>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      <media:content url="https://i.imgur.com/o6k6Rne.jpg" medium="image" type="image/jpeg"/>
    </item>
  </channel>
</rss>
